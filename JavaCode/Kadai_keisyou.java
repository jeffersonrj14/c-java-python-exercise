class Car{
	//--フィールド----
	// 現在速度
	/*フィールド名は各自で適切な名前で作成してください*/
	protected int /*現在速度*/
	
	//--メソッド----
	// コンストラクタ
	public /*コンストラクタの書き方を見直して書いてください*/ {
		// 現在速度を0に初期化する
	}
	
	// 走る
	/*メソッド名は各自で適切な名前で作成してください*/
	public void xxxxxx() { 
		// 現在速度を60に変更する
		
	}
	
	// 止まる
	public void yyyyyy() {
		// 現在速度を0に変更する
	}
	
	// 現在速度取得
	public int zzzzzz() {
		// 現在速度を取得する
		// returnでフィールドの現在速度を返す
		return /*現在速度*/;
	}
}

// RacingCarはCarを継承する
class RacingCar extends Car{
	//--フィールド----
	/*レーシングカーで追加するフィールドはありません*/
	
	//--メソッド----
	/*レーシングカー追加するメソッドを書いてください*/
	// 走る !!車の走るメソッドを「オーバーライド」するメソッド!!
	
}

// TimeMachineはCarを継承する
class TimeMachine /*継承を書きましょう*/{
	//--フィールド----
	/*タイムマシンで必要なフィールドを追加してください*/
	
	//--メソッド----
	/*タイムマシンで必要なメソッドを追加してください*/
}

public class Kadai_keisyou {

	public static void main(String[] args) {
		// 車を用意する(変数を用意し new を行い使用できる準備を行う)

		// 車を走らせる

		// 「main で表示:車が、時速○○km で走っています」と車から情報を取得して表示
		//!!!!「表示」する指定があるところがSystem.out.println()必須の所です!!!!必ずprintlnしてください
		System.out.println("main で表示:車が、時速"+ /*車の現在速度*/ +"km で走っています");

		// 車を止める

		// 「main で表示:車が停止し、時速○○km になりました」と車から情報を取得して表示
		System.out.println("main で表示:車が停止し、時速"+ /*車の現在速度*/ +"km になりました");

		// レーシングカーを用意(変数を用意し new を行い使用できる準備を行う)
		// レーシングカーを走らせる
		// 「main で表示:車が、時速○○km で走っています」とレーシングカーから情報を取得して表示
		System.out.println("main で表示:車が、時速"+ /*レーシングカーの現在速度*/ +"km で走っています");
		
		// レーシングカーを止める
		// 「main で表示:車が停止し、時速○○km になりました」とレーシングカーから情報を取得して表示
		System.out.println("main で表示:車が停止し、時速"+ /*レーシングカーの現在速度*/ +"km になりました");
		
		// タイムマシンを用意(変数を用意し new を行い使用できる準備を行う)
		// タイムマシンで走らせる
		// 「main で表示:車が、時速○○km で走っています」とタイムマシンから情報を取得して表示
		System.out.println("main で表示:車が、時速"+ /*タイムマシンの現在速度*/ +"km で走っています");
		// タイムマシンを止める
		// 「main で表示:車が停止し、時速○○km になりました」とタイムマシンから情報を取得して表示
		System.out.println("main で表示:車が停止し、時速"+ /*タイムマシンの現在速度*/ +"km になりました");
		
		// タイムマシンへ時間設定を行う 22 時 33 分 44 秒に設定する
		// タイムマシンで時間を旅する(時間移動する)
		
	}

}
